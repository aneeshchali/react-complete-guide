{"ast":null,"code":"import { cartToggleActions } from \"./cartToggleSlice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://redux-http-9231c-default-rtdb.firebaseio.com/cart.json\");\n      if (!response.ok) {\n        throw new Error(\"error\");\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      await fetchCartData();\n    } catch (error) {\n      dispatch(cartToggleActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Fetching cart data failed!\"\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(cartToggleActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data!\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://redux-http-9231c-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(\"sending cart data failed\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(cartToggleActions.showNotification({\n        status: \"success\",\n        title: \"Success!.\",\n        message: \"Sent cart data sucessfully!\"\n      }));\n    } catch (error) {\n      dispatch(cartToggleActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending cart data failed!\"\n      }));\n    }\n  };\n};","map":{"version":3,"names":["cartToggleActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"sources":["C:/Users/lcom/Desktop/react/react-complete-guide/src/store/cart-actions.js"],"sourcesContent":["import { cartToggleActions } from \"./cartToggleSlice\";\r\n\r\nexport const fetchCartData = () => {\r\n  return async(dispatch) => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\r\n        \"https://redux-http-9231c-default-rtdb.firebaseio.com/cart.json\"\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"error\");\r\n      }\r\n      const data = await response.json();\r\n\r\n      return data;\r\n    };\r\n\r\n    try{\r\n        await fetchCartData();\r\n    }\r\n    catch(error){\r\n        dispatch(\r\n            cartToggleActions.showNotification({\r\n              status: \"error\",\r\n              title: \"Error!\",\r\n              message: \"Fetching cart data failed!\",\r\n            })\r\n          );\r\n    }\r\n  };\r\n};\r\n\r\nexport const sendCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      cartToggleActions.showNotification({\r\n        status: \"pending\",\r\n        title: \"Sending...\",\r\n        message: \"Sending cart data!\",\r\n      })\r\n    );\r\n\r\n    const sendRequest = async () => {\r\n      const response = await fetch(\r\n        \"https://redux-http-9231c-default-rtdb.firebaseio.com/cart.json\",\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify(cart),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"sending cart data failed\");\r\n      }\r\n    };\r\n    try {\r\n      await sendRequest();\r\n      dispatch(\r\n        cartToggleActions.showNotification({\r\n          status: \"success\",\r\n          title: \"Success!.\",\r\n          message: \"Sent cart data sucessfully!\",\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        cartToggleActions.showNotification({\r\n          status: \"error\",\r\n          title: \"Error!\",\r\n          message: \"Sending cart data failed!\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,mBAAmB;AAErD,OAAO,MAAMC,aAAa,GAAG,MAAM;EACjC,OAAO,MAAMC,QAAQ,IAAK;IACxB,MAAMC,SAAS,GAAG,YAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAAgE,CACjE;MACD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,OAAO,CAAC;MAC1B;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAElC,OAAOD,IAAI;IACb,CAAC;IAED,IAAG;MACC,MAAMP,aAAa,EAAE;IACzB,CAAC,CACD,OAAMS,KAAK,EAAC;MACRR,QAAQ,CACJF,iBAAiB,CAACW,gBAAgB,CAAC;QACjCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACP;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAO,MAAOd,QAAQ,IAAK;IACzBA,QAAQ,CACNF,iBAAiB,CAACW,gBAAgB,CAAC;MACjCC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CAAC,CACH;IAED,MAAMG,WAAW,GAAG,YAAY;MAC9B,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAAgE,EAChE;QACEa,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;MAC3B,CAAC,CACF;MAED,IAAI,CAACZ,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;IACF,CAAC;IACD,IAAI;MACF,MAAMU,WAAW,EAAE;MACnBf,QAAQ,CACNF,iBAAiB,CAACW,gBAAgB,CAAC;QACjCC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,WAAW;QAClBC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdR,QAAQ,CACNF,iBAAiB,CAACW,gBAAgB,CAAC;QACjCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CAAC,CACH;IACH;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}