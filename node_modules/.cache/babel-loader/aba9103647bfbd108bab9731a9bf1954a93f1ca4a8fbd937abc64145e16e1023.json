{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useReducer } from \"react\";\nconst initialState = {\n  value: \"\",\n  isTouched: false\n};\nconst inputReducer = (state, action) => {};\nconst useInput = validateValue => {\n  _s();\n  const [inputState, dispatch] = useReducer(inputReducer, initialState);\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n  const inputBlurHandler = event => {\n    setIsTouched(true);\n  };\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n_s(useInput, \"fUXFC69TAe6QMJJrDvG6lXsTNQM=\");\nexport default useInput;","map":{"version":3,"names":["useState","useReducer","initialState","value","isTouched","inputReducer","state","action","useInput","validateValue","inputState","dispatch","enteredValue","setEnteredValue","setIsTouched","valueIsValid","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","isValid"],"sources":["C:/Users/lcom/Desktop/react/react-complete-guide/src/hooks/use-input.js"],"sourcesContent":["import { useState, useReducer } from \"react\";\n\nconst initialState = {\n  value: \"\",\n  isTouched: false,\n};\nconst inputReducer = (state, action) => {};\n\n\n\nconst useInput = (validateValue) => {\n  const [inputState, dispatch] = useReducer(inputReducer, initialState);\n  \n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n  };\n\n  const inputBlurHandler = (event) => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAE5C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE;AACb,CAAC;AACD,MAAMC,YAAY,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK,CAAC,CAAC;AAI1C,MAAMC,QAAQ,GAAIC,aAAa,IAAK;EAAA;EAClC,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGV,UAAU,CAACI,YAAY,EAAEH,YAAY,CAAC;EAErE,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACI,SAAS,EAAEU,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMe,YAAY,GAAGN,aAAa,CAACG,YAAY,CAAC;EAChD,MAAMI,QAAQ,GAAG,CAACD,YAAY,IAAIX,SAAS;EAE3C,MAAMa,kBAAkB,GAAIC,KAAK,IAAK;IACpCL,eAAe,CAACK,KAAK,CAACC,MAAM,CAAChB,KAAK,CAAC;EACrC,CAAC;EAED,MAAMiB,gBAAgB,GAAIF,KAAK,IAAK;IAClCJ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMO,KAAK,GAAG,MAAM;IAClBR,eAAe,CAAC,EAAE,CAAC;IACnBC,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,OAAO;IACLX,KAAK,EAAES,YAAY;IACnBU,OAAO,EAAEP,YAAY;IACrBC,QAAQ;IACRC,kBAAkB;IAClBG,gBAAgB;IAChBC;EACF,CAAC;AACH,CAAC;AAAC,GA9BIb,QAAQ;AAgCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}