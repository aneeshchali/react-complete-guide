{"ast":null,"code":"const initialAuthState = {\n  isAuthenticated: false\n};\nconst AuthSlice = createSlice({\n  name: \"authentication\",\n  initialState: initialAuthState,\n  reducer: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return { counter: state.counter + 1, showCounter: state.showCounter };\n//   }\n//   if (action.type === \"toggle\") {\n//     return { counter: state.counter, showCounter: !state.showCounter };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\n//   }\n//   return state;\n// };\n\n// const store = createStore(counterSlice.reducer);\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = AuthSlice.actions;\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: AuthSlice.reducer\n  }\n});\nexport default store;","map":{"version":3,"names":["initialAuthState","isAuthenticated","AuthSlice","createSlice","name","initialState","reducer","login","state","logout","counterActions","counterSlice","actions","authActions","store","configureStore","counter","auth"],"sources":["C:/Users/lcom/Desktop/react/react-complete-guide/src/store/redux.js"],"sourcesContent":["\r\n\r\n\r\nconst initialAuthState = {\r\n  isAuthenticated: false,\r\n};\r\n\r\nconst AuthSlice = createSlice({\r\n  name: \"authentication\",\r\n  initialState: initialAuthState,\r\n  reducer: {\r\n    login(state) {\r\n      state.isAuthenticated = true;\r\n    },\r\n    logout(state) {\r\n      state.isAuthenticated = false;\r\n    },\r\n  },\r\n});\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//   if (action.type === \"increment\") {\r\n//     return { counter: state.counter + 1, showCounter: state.showCounter };\r\n//   }\r\n//   if (action.type === \"toggle\") {\r\n//     return { counter: state.counter, showCounter: !state.showCounter };\r\n//   }\r\n//   if (action.type === \"increase\") {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"decrement\") {\r\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\r\n//   }\r\n//   return state;\r\n// };\r\n\r\n// const store = createStore(counterSlice.reducer);\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = AuthSlice.actions;\r\n\r\nconst store = configureStore({\r\n  reducer: { counter: counterSlice.reducer, auth: AuthSlice.reducer },\r\n});\r\nexport default store;\r\n"],"mappings":"AAGA,MAAMA,gBAAgB,GAAG;EACvBC,eAAe,EAAE;AACnB,CAAC;AAED,MAAMC,SAAS,GAAGC,WAAW,CAAC;EAC5BC,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAEL,gBAAgB;EAC9BM,OAAO,EAAE;IACPC,KAAK,CAACC,KAAK,EAAE;MACXA,KAAK,CAACP,eAAe,GAAG,IAAI;IAC9B,CAAC;IACDQ,MAAM,CAACD,KAAK,EAAE;MACZA,KAAK,CAACP,eAAe,GAAG,KAAK;IAC/B;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO,MAAMS,cAAc,GAAGC,YAAY,CAACC,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGX,SAAS,CAACU,OAAO;AAE5C,MAAME,KAAK,GAAGC,cAAc,CAAC;EAC3BT,OAAO,EAAE;IAAEU,OAAO,EAAEL,YAAY,CAACL,OAAO;IAAEW,IAAI,EAAEf,SAAS,CAACI;EAAQ;AACpE,CAAC,CAAC;AACF,eAAeQ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}