{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0,\n  totalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart-items\",\n  initialState: initialCartState,\n  reducers: {\n    addCart(state, action) {\n      const newItem = action.payload;\n      const ItemExist = state.items.find(val => val.itemId === newItem.id);\n      if (!ItemExist) {\n        state.items.push({\n          itemId: newItem.id,\n          itemPrice: newItem.price,\n          itemQuantity: 1,\n          itemTitle: newItem.title,\n          itemTotal: newItem.price * 1\n        });\n      } else {\n        ItemExist.itemQuantity = ItemExist.itemQuantity + 1;\n        ItemExist.itemTotal = ItemExist.itemPrice * ItemExist.itemQuantity;\n        state.totalQuantity = state.items.length;\n        state.totalAmount = state.items.map(val => val.itemTotal + value);\n      }\n    },\n    removeCart(state, action) {}\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialCartState","items","totalQuantity","totalAmount","cartSlice","name","initialState","reducers","addCart","state","action","newItem","payload","ItemExist","find","val","itemId","id","push","itemPrice","price","itemQuantity","itemTitle","title","itemTotal","length","map","value","removeCart","cartActions","actions","reducer"],"sources":["C:/Users/lcom/Desktop/react/react-complete-guide/src/store/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCartState = { items: [], totalQuantity: 0, totalAmount: 0 };\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart-items\",\r\n  initialState: initialCartState,\r\n  reducers: {\r\n    addCart(state, action) {\r\n      const newItem = action.payload;\r\n      const ItemExist = state.items.find((val) => val.itemId === newItem.id);\r\n      if (!ItemExist) {\r\n        state.items.push({\r\n          itemId: newItem.id,\r\n          itemPrice: newItem.price,\r\n          itemQuantity: 1,\r\n          itemTitle: newItem.title,\r\n          itemTotal: newItem.price * 1,\r\n        });\r\n      } else {\r\n        ItemExist.itemQuantity = ItemExist.itemQuantity + 1;\r\n        ItemExist.itemTotal = ItemExist.itemPrice * ItemExist.itemQuantity;\r\n        state.totalQuantity = state.items.length;\r\n        state.totalAmount = state.items.map(val=>val.itemTotal+value)\r\n      }\r\n    },\r\n    removeCart(state, action) {},\r\n  },\r\n});\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,gBAAgB,GAAG;EAAEC,KAAK,EAAE,EAAE;EAAEC,aAAa,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAE,CAAC;AAExE,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAEN,gBAAgB;EAC9BO,QAAQ,EAAE;IACRC,OAAO,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,SAAS,GAAGJ,KAAK,CAACR,KAAK,CAACa,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,MAAM,KAAKL,OAAO,CAACM,EAAE,CAAC;MACtE,IAAI,CAACJ,SAAS,EAAE;QACdJ,KAAK,CAACR,KAAK,CAACiB,IAAI,CAAC;UACfF,MAAM,EAAEL,OAAO,CAACM,EAAE;UAClBE,SAAS,EAAER,OAAO,CAACS,KAAK;UACxBC,YAAY,EAAE,CAAC;UACfC,SAAS,EAAEX,OAAO,CAACY,KAAK;UACxBC,SAAS,EAAEb,OAAO,CAACS,KAAK,GAAG;QAC7B,CAAC,CAAC;MACJ,CAAC,MAAM;QACLP,SAAS,CAACQ,YAAY,GAAGR,SAAS,CAACQ,YAAY,GAAG,CAAC;QACnDR,SAAS,CAACW,SAAS,GAAGX,SAAS,CAACM,SAAS,GAAGN,SAAS,CAACQ,YAAY;QAClEZ,KAAK,CAACP,aAAa,GAAGO,KAAK,CAACR,KAAK,CAACwB,MAAM;QACxChB,KAAK,CAACN,WAAW,GAAGM,KAAK,CAACR,KAAK,CAACyB,GAAG,CAACX,GAAG,IAAEA,GAAG,CAACS,SAAS,GAACG,KAAK,CAAC;MAC/D;IACF,CAAC;IACDC,UAAU,CAACnB,KAAK,EAAEC,MAAM,EAAE,CAAC;EAC7B;AACF,CAAC,CAAC;AACF,OAAO,MAAMmB,WAAW,GAAGzB,SAAS,CAAC0B,OAAO;AAC5C,eAAe1B,SAAS,CAAC2B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}