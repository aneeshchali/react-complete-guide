{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { cartToggleActions } from \"./cartToggleSlice\";\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0,\n  totalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart-items\",\n  initialState: initialCartState,\n  reducers: {\n    addCart(state, action) {\n      const newItem = action.payload;\n      const ItemExist = state.items.find(val => val.itemId === newItem.id);\n      if (!ItemExist) {\n        state.items.push({\n          itemId: newItem.id,\n          itemPrice: newItem.price,\n          itemQuantity: 1,\n          itemTitle: newItem.title,\n          itemTotal: newItem.price * 1\n        });\n        state.totalQuantity = state.items.length;\n        state.totalAmount = 0;\n        state.items.forEach(val => {\n          return state.totalAmount = val.itemTotal + state.totalAmount;\n        });\n      } else {\n        ItemExist.itemQuantity = ItemExist.itemQuantity + 1;\n        ItemExist.itemTotal = ItemExist.itemPrice * ItemExist.itemQuantity;\n        state.totalQuantity = state.items.length;\n        state.totalAmount = 0;\n        state.items.forEach(val => {\n          return state.totalAmount = val.itemTotal + state.totalAmount;\n        });\n      }\n    },\n    removeCart(state, action) {\n      const ItemExist = state.items.find(val => val.itemId === action.payload.id);\n      if (ItemExist) {\n        if (ItemExist.itemQuantity > 1) {\n          ItemExist.itemQuantity = ItemExist.itemQuantity - 1;\n          ItemExist.itemTotal = ItemExist.itemPrice * ItemExist.itemQuantity;\n        } else {\n          console.log(\"hello\");\n          state.items = state.items.filter(val => {\n            console.log(ItemExist);\n            return val.itemId !== action.payload.id;\n          });\n          console.log(state.items);\n        }\n        state.totalQuantity = state.items.length;\n        state.totalAmount = 0;\n        state.items.forEach(val => {\n          return state.totalAmount = val.itemTotal + state.totalAmount;\n        });\n      }\n    }\n  }\n});\nconst sendCartData = cart => {\n  return async dispatch => {\n    dispatch(cartToggleActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data!\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://redux-http-9231c-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(\"sending cart data failed\");\n      }\n    };\n    try {\n      await sendRequest();\n    } catch (error) {\n      dispatch(cartToggleActions.showNotification({\n        status: \"success\",\n        title: \"Success!.\",\n        message: \"Sent cart data sucessfully!\"\n      }));\n    }\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartToggleActions","initialCartState","items","totalQuantity","totalAmount","cartSlice","name","initialState","reducers","addCart","state","action","newItem","payload","ItemExist","find","val","itemId","id","push","itemPrice","price","itemQuantity","itemTitle","title","itemTotal","length","forEach","removeCart","console","log","filter","sendCartData","cart","dispatch","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions","reducer"],"sources":["C:/Users/lcom/Desktop/react/react-complete-guide/src/store/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { cartToggleActions } from \"./cartToggleSlice\";\r\n\r\nconst initialCartState = { items: [], totalQuantity: 0, totalAmount: 0 };\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart-items\",\r\n  initialState: initialCartState,\r\n  reducers: {\r\n    addCart(state, action) {\r\n      const newItem = action.payload;\r\n      const ItemExist = state.items.find((val) => val.itemId === newItem.id);\r\n      if (!ItemExist) {\r\n        state.items.push({\r\n          itemId: newItem.id,\r\n          itemPrice: newItem.price,\r\n          itemQuantity: 1,\r\n          itemTitle: newItem.title,\r\n          itemTotal: newItem.price * 1,\r\n        });\r\n        state.totalQuantity = state.items.length;\r\n        state.totalAmount = 0;\r\n        state.items.forEach((val) => {\r\n          return (state.totalAmount = val.itemTotal + state.totalAmount);\r\n        });\r\n      } else {\r\n        ItemExist.itemQuantity = ItemExist.itemQuantity + 1;\r\n        ItemExist.itemTotal = ItemExist.itemPrice * ItemExist.itemQuantity;\r\n        state.totalQuantity = state.items.length;\r\n        state.totalAmount = 0;\r\n        state.items.forEach((val) => {\r\n          return (state.totalAmount = val.itemTotal + state.totalAmount);\r\n        });\r\n      }\r\n    },\r\n    removeCart(state, action) {\r\n      const ItemExist = state.items.find(\r\n        (val) => val.itemId === action.payload.id\r\n      );\r\n      if (ItemExist) {\r\n        if (ItemExist.itemQuantity > 1) {\r\n          ItemExist.itemQuantity = ItemExist.itemQuantity - 1;\r\n          ItemExist.itemTotal = ItemExist.itemPrice * ItemExist.itemQuantity;\r\n        } else {\r\n          console.log(\"hello\");\r\n          state.items = state.items.filter((val) => {\r\n            console.log(ItemExist);\r\n            return val.itemId !== action.payload.id;\r\n          });\r\n          console.log(state.items);\r\n        }\r\n        state.totalQuantity = state.items.length;\r\n        state.totalAmount = 0;\r\n        state.items.forEach((val) => {\r\n          return (state.totalAmount = val.itemTotal + state.totalAmount);\r\n        });\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nconst sendCartData = (cart) => {\r\n  return async (dispatch) => {\r\n    dispatch(\r\n      cartToggleActions.showNotification({\r\n        status: \"pending\",\r\n        title: \"Sending...\",\r\n        message: \"Sending cart data!\",\r\n      })\r\n    );\r\n\r\n    const sendRequest = async () => {\r\n      const response = await fetch(\r\n        \"https://redux-http-9231c-default-rtdb.firebaseio.com/cart.json\",\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify(cart),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"sending cart data failed\");\r\n      }\r\n    };\r\n    try{\r\n      await sendRequest();\r\n    }\r\n    catch(error){\r\n      dispatch(\r\n        cartToggleActions.showNotification({\r\n          status: \"success\",\r\n          title: \"Success!.\",\r\n          message: \"Sent cart data sucessfully!\",\r\n        })\r\n      );\r\n    }\r\n    \r\n   \r\n  };\r\n};\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}