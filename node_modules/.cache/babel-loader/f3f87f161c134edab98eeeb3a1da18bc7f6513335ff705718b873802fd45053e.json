{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lcom\\\\Desktop\\\\react\\\\react-complete-guide\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport Button from \"./components/UI/Button/Button\";\nimport \"./App.css\";\nimport DemoOutput from \"./components/UI/Button/Demo/DemoOutput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showParagraph, setshowParagraph] = useState(false);\n  const [AllowToggle, setAllowToggle] = useState(false);\n  console.log(\"app running\");\n  const toggleHandler = useCallback(() => {\n    setshowParagraph(prevShowParagraph => !prevShowParagraph);\n  }, []);\n  const allowToggleHandler = () => {\n    setAllowToggle(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi there!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DemoOutput, {\n      show: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: allowToggleHandler,\n      children: \"Allow Toggle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleHandler,\n      children: \"Toggle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iPi+Zyi1AzUqfEr9rHQDUaIEPrs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","Button","DemoOutput","App","showParagraph","setshowParagraph","AllowToggle","setAllowToggle","console","log","toggleHandler","prevShowParagraph","allowToggleHandler"],"sources":["C:/Users/lcom/Desktop/react/react-complete-guide/src/App.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport Button from \"./components/UI/Button/Button\";\n\nimport \"./App.css\";\nimport DemoOutput from \"./components/UI/Button/Demo/DemoOutput\";\n\nfunction App() {\n  const [showParagraph, setshowParagraph] = useState(false);\n  const [AllowToggle, setAllowToggle] = useState(false);\n\n  console.log(\"app running\");\n  const toggleHandler = useCallback(() => {\n    setshowParagraph((prevShowParagraph) => !prevShowParagraph);\n  }, []);\n\n  const allowToggleHandler=()=>{\n    setAllowToggle(true)\n  }\n\n  return (\n    <div className=\"app\">\n      <h1>Hi there!</h1>\n      <DemoOutput show={false}></DemoOutput>\n      <Button onClick={allowToggleHandler}>Allow Toggle</Button>\n      <br></br>\n      <Button onClick={toggleHandler}>Toggle</Button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,OAAOC,MAAM,MAAM,+BAA+B;AAElD,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,wCAAwC;AAAC;AAEhE,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAErDS,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC1B,MAAMC,aAAa,GAAGV,WAAW,CAAC,MAAM;IACtCK,gBAAgB,CAAEM,iBAAiB,IAAK,CAACA,iBAAiB,CAAC;EAC7D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,kBAAkB,GAAC,MAAI;IAC3BL,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eAClB,QAAC,UAAU;MAAC,IAAI,EAAE;IAAM;MAAA;MAAA;MAAA;IAAA,QAAc,eACtC,QAAC,MAAM;MAAC,OAAO,EAAEK,kBAAmB;MAAA,UAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAS,eAC1D;MAAA;MAAA;MAAA;IAAA,QAAS,eACT,QAAC,MAAM;MAAC,OAAO,EAAEF,aAAc;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3C;AAEV;AAAC,GAtBQP,GAAG;AAAA,KAAHA,GAAG;AAwBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}