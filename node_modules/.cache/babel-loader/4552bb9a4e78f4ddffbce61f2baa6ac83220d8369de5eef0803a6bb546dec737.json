{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0,\n  totalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart-items\",\n  initialState: initialCartState,\n  reducers: {\n    refreshCart(state, action) {\n      state.items = actions.payload.ite;\n    },\n    addCart(state, action) {\n      const newItem = action.payload;\n      const ItemExist = state.items.find(val => val.itemId === newItem.id);\n      if (!ItemExist) {\n        state.items.push({\n          itemId: newItem.id,\n          itemPrice: newItem.price,\n          itemQuantity: 1,\n          itemTitle: newItem.title,\n          itemTotal: newItem.price * 1\n        });\n        state.totalQuantity = state.items.length;\n        state.totalAmount = 0;\n        state.items.forEach(val => {\n          return state.totalAmount = val.itemTotal + state.totalAmount;\n        });\n      } else {\n        ItemExist.itemQuantity = ItemExist.itemQuantity + 1;\n        ItemExist.itemTotal = ItemExist.itemPrice * ItemExist.itemQuantity;\n        state.totalQuantity = state.items.length;\n        state.totalAmount = 0;\n        state.items.forEach(val => {\n          return state.totalAmount = val.itemTotal + state.totalAmount;\n        });\n      }\n    },\n    removeCart(state, action) {\n      const ItemExist = state.items.find(val => val.itemId === action.payload.id);\n      if (ItemExist) {\n        if (ItemExist.itemQuantity > 1) {\n          ItemExist.itemQuantity = ItemExist.itemQuantity - 1;\n          ItemExist.itemTotal = ItemExist.itemPrice * ItemExist.itemQuantity;\n        } else {\n          console.log(\"hello\");\n          state.items = state.items.filter(val => {\n            console.log(ItemExist);\n            return val.itemId !== action.payload.id;\n          });\n          console.log(state.items);\n        }\n        state.totalQuantity = state.items.length;\n        state.totalAmount = 0;\n        state.items.forEach(val => {\n          return state.totalAmount = val.itemTotal + state.totalAmount;\n        });\n      }\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialCartState","items","totalQuantity","totalAmount","cartSlice","name","initialState","reducers","refreshCart","state","action","actions","payload","ite","addCart","newItem","ItemExist","find","val","itemId","id","push","itemPrice","price","itemQuantity","itemTitle","title","itemTotal","length","forEach","removeCart","console","log","filter","cartActions","reducer"],"sources":["C:/Users/lcom/Desktop/react/react-complete-guide/src/store/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst initialCartState = { items: [], totalQuantity: 0, totalAmount: 0 };\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart-items\",\r\n  initialState: initialCartState,\r\n  reducers: {\r\n    refreshCart(state,action){\r\n      state.items = actions.payload.ite \r\n    },\r\n    addCart(state, action) {\r\n      const newItem = action.payload;\r\n      const ItemExist = state.items.find((val) => val.itemId === newItem.id);\r\n      if (!ItemExist) {\r\n        state.items.push({\r\n          itemId: newItem.id,\r\n          itemPrice: newItem.price,\r\n          itemQuantity: 1,\r\n          itemTitle: newItem.title,\r\n          itemTotal: newItem.price * 1,\r\n        });\r\n        state.totalQuantity = state.items.length;\r\n        state.totalAmount = 0;\r\n        state.items.forEach((val) => {\r\n          return (state.totalAmount = val.itemTotal + state.totalAmount);\r\n        });\r\n      } else {\r\n        ItemExist.itemQuantity = ItemExist.itemQuantity + 1;\r\n        ItemExist.itemTotal = ItemExist.itemPrice * ItemExist.itemQuantity;\r\n        state.totalQuantity = state.items.length;\r\n        state.totalAmount = 0;\r\n        state.items.forEach((val) => {\r\n          return (state.totalAmount = val.itemTotal + state.totalAmount);\r\n        });\r\n      }\r\n    },\r\n    removeCart(state, action) {\r\n      const ItemExist = state.items.find(\r\n        (val) => val.itemId === action.payload.id\r\n      );\r\n      if (ItemExist) {\r\n        if (ItemExist.itemQuantity > 1) {\r\n          ItemExist.itemQuantity = ItemExist.itemQuantity - 1;\r\n          ItemExist.itemTotal = ItemExist.itemPrice * ItemExist.itemQuantity;\r\n        } else {\r\n          console.log(\"hello\");\r\n          state.items = state.items.filter((val) => {\r\n            console.log(ItemExist);\r\n            return val.itemId !== action.payload.id;\r\n          });\r\n          console.log(state.items);\r\n        }\r\n        state.totalQuantity = state.items.length;\r\n        state.totalAmount = 0;\r\n        state.items.forEach((val) => {\r\n          return (state.totalAmount = val.itemTotal + state.totalAmount);\r\n        });\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}